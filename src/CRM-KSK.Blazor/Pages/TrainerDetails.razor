@page "/trainer-details"
@inject TrainerStateService _trainerState
@inject TrainerServiceBlazor _trainerService
@inject NavigationManager _navigation

<div class="container-fluid">
    <!-- Заголовок страницы -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="page-header">
                <h2 class="page-title">
                    <i class="bi bi-person-lines-fill me-2"></i>
                    Информация о тренере
                </h2>
            </div>
        </div>
    </div>

    @if (_trainerState.SelectedTrainer != null)
    {
        var trainer = _trainerState.SelectedTrainer;

        @if (IsEditing)
        {
            <!-- Режим редактирования -->
            <div class="trainer-edit-form">
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Имя:</label>
                            <input type="text" class="form-control" @bind="trainer.FirstName" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Фамилия:</label>
                            <input type="text" class="form-control" @bind="trainer.LastName" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Отчество:</label>
                            <input type="text" class="form-control" @bind="trainer.Surname" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Телефон:</label>
                            <input type="text" class="form-control" @bind="trainer.Phone" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Дата рождения:</label>
                            <input type="date" class="form-control" @bind="trainer.DateOfBirth" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Цвет:</label>
                            <input type="color" class="form-control form-control-color" @bind="trainer.Color" />
                        </div>
                    </div>
                </div>
                
                <div class="d-flex gap-2 mt-3">
                    <button class="btn btn-success" @onclick="SaveChanges">Сохранить</button>
                    <button class="btn btn-secondary" @onclick="CancelEdit">Отмена</button>
                </div>
            </div>
        }
        else
        {
            <!-- Основная информация о тренере -->
            <div class="trainer-info-card">
                <div class="trainer-header">
                    <div class="trainer-avatar" style="background-color: @trainer.Color;">
                        <span class="avatar-text">@trainer.FirstName[0]@trainer.LastName[0]</span>
                    </div>
                    <div class="trainer-main-info">
                        <h4 class="trainer-name">@trainer.LastName @trainer.FirstName @trainer.Surname</h4>
                        <div class="trainer-details">
                            <div class="detail-item">
                                <i class="bi bi-telephone"></i>
                                <span>@FormatPhoneNumber(trainer.Phone)</span>
                            </div>
                            <div class="detail-item">
                                <i class="bi bi-calendar3"></i>
                                <span>@trainer.DateOfBirth.ToShortDateString()</span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Дополнительная информация -->
                <div class="trainer-additional-info">
                    <h5 class="section-title">
                        <i class="bi bi-palette"></i>
                        Дополнительная информация
                    </h5>
                    <div class="additional-details">
                        <div class="detail-item">
                            <i class="bi bi-circle-fill" style="color: @trainer.Color;"></i>
                            <span>Цвет тренера: <span class="color-name" style="color: @trainer.Color;">@trainer.Color</span></span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Кнопки действий -->
            <div class="trainer-actions">
                <div class="d-flex gap-2 flex-wrap">
                    <button class="btn btn-primary" @onclick="EditTrainer">
                        <i class="bi bi-pencil"></i>
                        Изменить
                    </button>
                    <button class="btn btn-danger" @onclick="DeleteTrainer">
                        <i class="bi bi-trash"></i>
                        Удалить тренера
                    </button>
                    <button class="btn btn-secondary" @onclick="GoBack">
                        <i class="bi bi-arrow-left"></i>
                        Назад
                    </button>
                </div>
            </div>
        }
    }
    else
    {
        <div class="alert alert-warning">
            <i class="bi bi-exclamation-triangle"></i>
            Тренер не выбран. Перейдите на страницу <a href="/trainers">управления тренерами</a>.
        </div>
    }
</div>
<style>
    /* Стили для карточки информации о тренере */
    .trainer-info-card {
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 12px;
        padding: 24px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 24px;
    }

    .trainer-header {
        display: flex;
        align-items: flex-start;
        gap: 20px;
        margin-bottom: 24px;
    }

    .trainer-avatar {
        width: 80px;
        height: 80px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        flex-shrink: 0;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
    }

    .avatar-text {
        color: white;
        font-size: 24px;
        font-weight: 600;
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.3);
    }

    .trainer-main-info {
        flex: 1;
    }

    .trainer-name {
        color: #212529;
        font-size: 28px;
        font-weight: 600;
        margin: 0 0 12px 0;
        line-height: 1.2;
    }

    .trainer-details {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .detail-item {
        display: flex;
        align-items: center;
        gap: 8px;
        color: #6c757d;
        font-size: 16px;
    }

    .detail-item i {
        color: #007bff;
        width: 16px;
        text-align: center;
    }

    /* Секция дополнительной информации */
    .trainer-additional-info {
        border-top: 1px solid #e9ecef;
        padding-top: 20px;
    }

    .section-title {
        color: #495057;
        font-size: 18px;
        font-weight: 600;
        margin: 0 0 16px 0;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .section-title i {
        color: #007bff;
    }

    .additional-details {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .color-name {
        font-weight: 600;
    }

    /* Кнопки действий */
    .trainer-actions {
        margin-top: 24px;
    }

    /* Форма редактирования */
    .trainer-edit-form {
        background: white;
        border: 1px solid #dee2e6;
        border-radius: 12px;
        padding: 24px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        margin-bottom: 24px;
    }

    /* Адаптивность */
    @@media (max-width: 768px) {
        .trainer-header {
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

        .trainer-avatar {
            width: 100px;
            height: 100px;
        }

        .avatar-text {
            font-size: 32px;
        }

        .trainer-name {
            font-size: 24px;
        }

        .trainer-actions .d-flex {
            flex-direction: column;
        }

        .trainer-actions .btn {
            width: 100%;
        }
    }
</style>

@code {
    private bool IsEditing = false;
    private TrainerDto? OriginalTrainerCopy;

    private void EditTrainer()
    {
        IsEditing = true;

        OriginalTrainerCopy = new TrainerDto
            {
                FirstName = _trainerState.SelectedTrainer.FirstName,
                LastName = _trainerState.SelectedTrainer.LastName,
                Surname = _trainerState.SelectedTrainer.Surname,
                Phone = _trainerState.SelectedTrainer.Phone,
                DateOfBirth = _trainerState.SelectedTrainer.DateOfBirth,
                Color = _trainerState.SelectedTrainer.Color,
            };
    }

    private async Task SaveChanges()
    {
        if (_trainerState.SelectedTrainer != null)
        {
            var success = await _trainerService.UpdateTrainerInfo(_trainerState.SelectedTrainer);
            if (success)
            {
                IsEditing = false;
                Console.WriteLine("Изменения сохранены.");
            }
            else
            {
                Console.WriteLine("Ошибка при сохранении.");
            }
        }
    }

    private void CancelEdit()
    {
        if (OriginalTrainerCopy != null)
        {
            _trainerState.SelectedTrainer.FirstName = OriginalTrainerCopy.FirstName;
            _trainerState.SelectedTrainer.LastName = OriginalTrainerCopy.LastName;
            _trainerState.SelectedTrainer.Surname = OriginalTrainerCopy.Surname;
            _trainerState.SelectedTrainer.Phone = OriginalTrainerCopy.Phone;
            _trainerState.SelectedTrainer.DateOfBirth = OriginalTrainerCopy.DateOfBirth;
            _trainerState.SelectedTrainer.Color = OriginalTrainerCopy.Color;
        }
        IsEditing = false;
    }

    private string FormatPhoneNumber(string phone)
    {
        return $"+7 ({phone.Substring(0, 3)}) {phone.Substring(3, 3)}-{phone.Substring(6, 2)}-{phone.Substring(8, 2)}";
    }

    private async Task DeleteTrainer()
    {
        await _trainerService.DeleteTrainer(_trainerState.SelectedTrainer.Id);
        GoBack();
    }

    private void GoBack()
    {
        _navigation.NavigateTo("/trainers");
    }
}