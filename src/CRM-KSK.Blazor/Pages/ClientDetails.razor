@page "/client-details"
@inject ClientStateService ClientState
@inject NavigationManager Navigation
@inject TrainerStateService TrainerState

<h3>Подробная информация о клиенте</h3>

@if (ClientState.SelectedClient != null)
{
    var client = ClientState.SelectedClient;

    <div class="card p-3">
        <p><strong>Имя:</strong> @client.FirstName</p>
        <p><strong>Фамилия:</strong> @client.LastName</p>
        <p><strong>Телефон:</strong> +7 @client.Phone</p>
        <p><strong>Дата рождения:</strong> @client.DateOfBirth.ToShortDateString()</p>
        <p><strong>Уровень тренировок:</strong> @client.LevelOfTraining</p>
        <p><strong>Тренер:</strong> <a href="/trainer-details" class="text-black" @onclick="() => ShowTrainerDetails(client.Trainer)">
                @client.Trainer.LastName @client.Trainer.FirstName</a></p>
        <h5>Данные о родителях</h5>
        <p><strong>Родитель:</strong> @client.ParentName</p>
        <p><strong>Телефон родителя:</strong>+7 @client.ParentPhone</p>
    </div>
}
else
{
    <p class="alert alert-warning">Клиент не выбран. Перейдите на страницу <a href="/clients">управления клиентами</a>.</p>
}
<button class="btn btn-secondary mt-3" @onclick="GoBack">Назад</button>

@code {

    private void GoBack()
    {
        Navigation.NavigateTo("/clients");
    }

    private void ShowTrainerDetails(TrainerDto trainerDto)
    {
        TrainerState.SelectedTrainer = trainerDto;
        Navigation.NavigateTo("/trainer-details");
    }
}
