@page "/"
@inject ClientServiceBlazor _clientService

<PageTitle>Главная</PageTitle>

<div class="container-fluid">
    <div class="row mb-4">
        <div class="col-12">
            <div class="page-header">
                <h2 class="page-title">
                    <i class="bi bi-house-door me-2"></i>
                    Дни рождения в этом месяце
                </h2>
            </div>
        </div>
    </div>
</div>

@if(Birthdays is null)
{
    <p>Загрузка данных...</p>
}
else if (!Birthdays.Any())
{
    <p>В этом месяце нет дней рождения.</p>
}
else
{
    <div class="birthday-container">
        @foreach (var birthday in SortedBirthdays)
        {
            <div class="birthday-card @(IsBirthdayToday(birthday) ? "today" : (IsBirthdayPassed(birthday) ? "passed" : ""))">
                <h4>@birthday.Name</h4>
                <p>
                    <strong>Дата рождения:</strong><br />
                    @birthday.Birthday.ToString("dd MMMM", new CultureInfo("ru-RU"))
                </p>
                <p><strong>Телефон:</strong><br />
                    @FormatPhoneNumber(birthday.Phone)</p>
                <p><strong>Тип:</strong> @birthday.PersonType</p>
            </div>
        }
    </div>
}

<style>
    .birthday-container {
    display: flex;
    flex-wrap: wrap;
    gap: 16px;
    margin-top: 20px;
    justify-content: center;
    }

    .birthday-card {
    background: #e0f7fa;
    border: 1px solid #b2ebf2;
    border-radius: 8px;
    padding: 16px;
    width: 220px;
    text-align: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    transition: transform 0.2s, box-shadow 0.2s;
    }

    .birthday-card:hover {
    transform: scale(1.05);
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    }

    .birthday-card.today {
    background: #ffecb3; 
    border: 2px solid #ffc107;
    }

    .birthday-card.passed {
    background: #e0e0e0;
    border: 1px solid #bdbdbd;
    color: #757575;
    }

    .birthday-card h4 {
    margin-bottom: 8px;
    color: #00796b;
    }

    .birthday-card p {
    margin: 4px 0;
    color: #004d40;
    }
</style>

@code {
    private List<BirthdayDto> Birthdays = [];

    private List<BirthdayDto> SortedBirthdays =>
        Birthdays?
            .OrderBy(b => IsBirthdayPassed(b))
            .ThenBy(b => b.Birthday.Day)
            .ToList() ?? new List<BirthdayDto>();

    protected override async Task OnInitializedAsync()
    {
        Birthdays = await _clientService.GetFromAllBodAsync();
    }

    private bool IsBirthdayToday(BirthdayDto birthday)
    {
        var today = DateTime.Today;
        return birthday.Birthday.Month == today.Month && birthday.Birthday.Day == today.Day;
    }

    private bool IsBirthdayPassed(BirthdayDto birthday)
    {
        var today = DateTime.Today;
        return birthday.Birthday.Month == today.Month && birthday.Birthday.Day < today.Day;
    }

    private string FormatPhoneNumber(string phone)
    {
        return $"+7 ({phone.Substring(0, 3)}) {phone.Substring(3, 3)}-{phone.Substring(6, 2)}-{phone.Substring(8, 2)}";
    }
}
